rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user's UID is in the admins collection
    function isUserAdmin(userId) {
      return exists(/databases/$(database)/documents/admins/$(userId));
    }

    // Helper function to get a user's role
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/admins/$(userId)).data.role;
    }
    
    // Products: Public can read, Admins can write
    match /products/{productId} {
      allow read: if true;
      allow write: if isUserAdmin(request.auth.uid);
    }

    // Site settings: Public can read, Admins can write
    match /site/{docId} {
      allow read: if true;
      allow write: if isUserAdmin(request.auth.uid);
    }

    // Orders: Users can manage their own, Admins can manage all
    match /orders/{orderId} {
      allow read, update: if request.auth.uid == resource.data.userId || isUserAdmin(request.auth.uid);
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    // Admins Collection: Authenticated users can read. SuperAdmins can write.
    match /admins/{userId} {
      allow read: if request.auth != null;
      // Allow creation/deletion of admins only by a superadmin
      allow write: if isUserAdmin(request.auth.uid) && getUserRole(request.auth.uid) == 'superadmin';
    }
  }
}
