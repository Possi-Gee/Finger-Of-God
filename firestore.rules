rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    function getAdminData() {
      return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data;
    }

    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isSuperAdmin() {
      // A user is a superadmin if they have an admin document and their role is 'superadmin'.
      return isAdmin() && getAdminData().role == 'superadmin';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // --- Collection Rules ---

    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /site/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /orders/{orderId} {
      allow read, update: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isOwner(request.resource.data.userId);
    }
    
    match /admins/{userId} {
      // Only a superadmin can list and read the details of all admins.
      allow list, read: if isSuperAdmin();
      // Admin creation/deletion is handled manually in the console, so write access is locked down.
      allow write: if false; 
    }
  }
}
