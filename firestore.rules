rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isSuperAdmin() {
      return request.auth.token.email == "admin@jaytelclassic.com" || request.auth.token.email == "jaytelclassicstore@gmail.com" || request.auth.token.email == "temahfingerofgod@gmail.com";
    }

    function getAdminRole() {
      return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      // Check for a valid admin document that hasn't expired.
      let adminDoc = get(/databases/$(database)/documents/admins/$(request.auth.uid)).data;
      let hasUnexpiredRole = (!('expiresAt' in adminDoc) || adminDoc.expiresAt > request.time);
      return (getAdminRole() == 'admin' || getAdminRole() == 'superadmin') && hasUnexpiredRole;
    }

    // Secure all paths by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    match /admins/{adminId} {
      allow read: if isSuperAdmin();
    }
    
    // Products can be read by anyone, but only managed by admins.
    match /products/{productId} {
      allow read: if true;
      allow write: if isSuperAdmin() || isAdmin();
    }
    
    // Site settings can be read by anyone, but only managed by admins.
    match /site/{docId} {
        allow read: if true;
        allow write: if isSuperAdmin() || isAdmin();
    }

    // Orders can be created by any authenticated user for themselves.
    // They can be read by the owner or any admin.
    // They can only be updated or deleted by an admin.
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if (request.auth != null && request.auth.uid == resource.data.userId) || isSuperAdmin() || isAdmin();
      allow update, delete: if isSuperAdmin() || isAdmin();
    }
  }
}
