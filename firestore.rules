rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin or superadmin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Helper function to check if an admin's access has expired
    function isNotExpired() {
      let adminData = get(/databases/$(database)/documents/admins/$(request.auth.uid)).data;
      return !('expiresAt' in adminData) || (request.time < timestamp.value(adminData.expiresAt));
    }

    // Products: Public can read, Admins can write
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin() && isNotExpired();
    }

    // Site settings: Public can read, Admins can write
    match /site/{docId} {
      allow read: if true;
      allow write: if isAdmin() && isNotExpired();
    }

    // Orders: Users can manage their own, Admins can manage all
    match /orders/{orderId} {
      allow read, update: if request.auth.uid == resource.data.userId || (isAdmin() && isNotExpired());
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    // Admins Collection: Authenticated users can read to verify their own status, SuperAdmins can write
    match /admins/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin() && get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'superadmin' && isNotExpired();
    }
  }
}
