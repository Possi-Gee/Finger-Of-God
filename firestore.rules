
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      // Check for hardcoded super admins or look up in the 'admins' collection
      return request.auth.token.email in ["admin@jaytelclassic.com", "jaytelclassicstore@gmail.com"] ||
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Products should be world-readable
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Site settings and homepage content should be world-readable
    match /site/{document} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Admins collection rules
    match /admins/{userId} {
        // Only a user themselves or another admin can see if they are an admin.
        // Deny list access for everyone.
        allow get: if request.auth.uid == userId || isAdmin();
        allow list, create, update, delete: if isAdmin();
    }
    
    // Orders can only be created by authenticated users for themselves.
    // They can be read by the user who owns it or by an admin.
    // Admins can update/delete any order.
    match /orders/{orderId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read: if request.auth != null && (request.resource.data.userId == request.auth.uid || isAdmin());
        allow update, delete: if isAdmin();
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
