rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    // Checks if the requesting user has a document in the /admins collection.
    function hasAdminEntry() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Retrieves the admin data for the requesting user.
    function getAdminData() {
      return get(/databases/$(database)/documents/admins/$(request.auth.uid)).data;
    }

    // Checks if the admin's access is not expired.
    // This assumes 'expiresAt' is stored as a Firestore timestamp.
    function isNotExpired() {
      let adminData = getAdminData();
      // If 'expiresAt' field doesn't exist, access is permanent (for the superadmin).
      // Otherwise, check if the current request time is before the expiration timestamp.
      return !('expiresAt' in adminData) || request.time < adminData.expiresAt;
    }

    // Checks if the user is a valid admin.
    function isAdmin() {
      return hasAdminEntry() && isNotExpired();
    }

    // Checks if the user is a superadmin.
    function isSuperAdmin() {
      return isAdmin() && getAdminData().role == 'superadmin';
    }

    // --- Collection Rules ---

    // Products: Public can read, Admins can write.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Site settings: Public can read, Admins can write.
    match /site/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Orders: Users can manage their own, Admins can manage all.
    match /orders/{orderId} {
      allow read, update: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Admins Collection:
    // - Only a superadmin can list and read the entire collection.
    // - SuperAdmins can create or delete documents.
    match /admins/{userId} {
      allow list, read: if isSuperAdmin();
      allow create, delete: if isSuperAdmin();
    }
  }
}
